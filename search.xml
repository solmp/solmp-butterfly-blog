<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>软件测试工具 —— SonarQube</title>
      <link href="/2022/05/03/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7-SonarQube/"/>
      <url>/2022/05/03/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7-SonarQube/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><code>SonarQube</code> 是用<code>Java</code>编写的一种自动代码审查工具，可检测代码中的错误，漏洞和潜在的安全问题，可方便于开发团队进行整体代码审查，规范管理，优化代码质量。</p><ul><li>各版本介绍</li></ul><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202205031522793.png" alt="image-20220503152214694"></p><h2 id="整体结构">整体结构</h2><ul><li><code>SonarQube</code> 实例由三个组件组成</li></ul><p><img src="https://docs.sonarqube.org/latest/images/SQ-instance-components.png" alt="SonarQube 实例组件"></p><ol><li>服务器<ul><li>为 <code>SonarQube</code> 用户界面提供服务的 Web 服务器。</li><li>基于 Elasticsearch 的搜索服务器。</li><li>负责处理代码分析报告并将其保存在 <code>SonarQube</code> 数据库中的计算引擎。</li></ul></li><li>数据库<ul><li>储存代码扫描期间生成的代码质量和安全性的指标和问题。</li><li><code>SonarQube</code> 实例配置。</li></ul></li><li>客户端<ul><li>在生成或持续集成服务器上运行的一个或多个扫描程序，用于分析项目。</li></ul></li></ol><h2 id="安装和配置（SonarQube-8-9-8-LTS-社区版）">安装和配置（<code>SonarQube</code> 8.9.8 LTS 社区版）</h2><h3 id="环境准备">环境准备</h3><ul><li>Java11<ul><li><code>SonarQube</code> 服务器只支持11版本</li></ul></li><li>数据库<ul><li>这个版本不支持 MySQL，这里选择 <a href="https://www.enterprisedb.com/downloads/postgres-postgresql-downloads">PostgreSQL 13</a></li><li>新建 <code>SonarQube </code>数据库，并建<code>test</code>模块保存数据</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202205031600325.png" alt="image-20220503160044288"></p><ul><li><p>服务器</p><ul><li>安装方式：<a href="https://hub.docker.com/_/sonarqube/">Docker</a>，<a href="https://www.sonarqube.org/downloads/">SonarQube压缩包</a></li><li>选择压缩包的方式，下载后解压到本地</li></ul></li><li><p>客户端（扫描器）</p><ul><li><a href="https://docs.sonarqube.org/8.9/analysis/scan/sonarscanner/">SonarScanner 4.7</a>，下载完是个压缩包，解压至本地<ul><li>增加<code>Path</code>环境变量，方便使用：<code>&lt;解压文件夹&gt;\bin</code></li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202205031555776.png" alt="image-20220503155503732"></p></li></ul><h3 id="配置">配置</h3><h4 id="服务器-SonarQube">服务器 SonarQube</h4><ul><li>打开<code>SonarQube</code>配置文件：<code>sonarqube-8.9.8.54436\conf\sonar.properties</code></li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PostgreSQL数据库用户名和密码</span></span><br><span class="line"><span class="attr">sonar.jdbc.username</span>=<span class="string">postgres   </span></span><br><span class="line"><span class="attr">sonar.jdbc.password</span>=<span class="string">root</span></span><br><span class="line"><span class="comment"># 配置数据库连接，SonarQube为数据库名，test为模块名</span></span><br><span class="line"><span class="attr">sonar.jdbc.url</span>=<span class="string">jdbc:postgresql://localhost/SonarQube?currentSchema=test</span></span><br><span class="line"><span class="comment"># 设置编码方式</span></span><br><span class="line"><span class="attr">sonar.sorceEncoding</span>=<span class="string">UTF-8</span></span><br></pre></td></tr></table></figure><h4 id="客户端-SonarScanner（扫描器）">客户端 SonarScanner（扫描器）</h4><ul><li>打开<code>SonarScanner</code>配置文件：<code>sonar-scanner-4.7.0.2747-windows\conf\sonar-scanner.properties</code></li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SonarQube 服务器</span></span><br><span class="line"><span class="attr">sonar.host.url</span>=<span class="string">http://localhost:9000</span></span><br><span class="line"><span class="comment"># 设置编码方式</span></span><br><span class="line"><span class="attr">sonar.sourceEncoding</span>=<span class="string">UTF-8</span></span><br></pre></td></tr></table></figure><h4 id="待测试代码配置">待测试代码配置</h4><ul><li>在代码目录下新建<code>sonar-project.properties</code>文件</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># must be unique in a given SonarQube instance</span></span><br><span class="line"><span class="attr">sonar.projectKey</span>=<span class="string">my:project</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># --- optional properties ---</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># defaults to project key</span></span><br><span class="line"><span class="comment">#sonar.projectName=My project</span></span><br><span class="line"><span class="comment"># defaults to &#x27;not provided&#x27;</span></span><br><span class="line"><span class="comment">#sonar.projectVersion=1.0</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"># Path is relative to the sonar-project.properties file. Defaults to .</span></span><br><span class="line"><span class="comment">#sonar.sources=.</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"># Encoding of the source code. Default is default system encoding</span></span><br><span class="line"><span class="comment">#sonar.sourceEncoding=UTF-8</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 默认账号密码都是admin，登录一次后会要求修改</span></span><br><span class="line"><span class="attr">sonar.login</span>=<span class="string">admin</span></span><br><span class="line"><span class="attr">sonar.password</span>=<span class="string">admin</span></span><br></pre></td></tr></table></figure><ul><li>一段简单 python 代码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;test&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202205031624319.png" alt="image-20220503162443281"></p><h2 id="开始测试">开始测试</h2><h3 id="启动服务器">启动服务器</h3><ul><li><p>进入<code>SonarQube</code>解压目录打开<code>sonarqube-8.9.8.54436\bin\windows-x86-64</code>中的<code>StartSonar.bat</code></p><ul><li>建议命令行打开，等待服务启动</li></ul><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202205031631884.png" alt="image-20220503163123641"></p><ul><li>出现红框部分表示启动成功，浏览器打开<code>http://localhost:9000/</code>，登录进入（账号密码默认admin）</li></ul><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202205031633856.png" alt="image-20220503163346773"></p></li></ul><h3 id="测试本地代码">测试本地代码</h3><ul><li>进入待测试代码文件夹，根目录下打开命令行，输入<code>sonar-scanner</code>回车开始分析代码</li></ul><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202205031637615.png" alt="image-20220503163755513"></p><ul><li>分析完成</li></ul><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202205031639177.png" alt="image-20220503163925050"></p><h3 id="刷新页面查看分析结果">刷新页面查看分析结果</h3><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202205031640170.png" alt="image-20220503164005106"></p><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202205031640068.png" alt="image-20220503164034982"></p><h3 id="修改代码">修改代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;test&quot;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><ul><li>在<code>sonar-project.properties</code>下更改版本号</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># must be unique in a given SonarQube instance</span></span><br><span class="line"><span class="attr">sonar.projectKey</span>=<span class="string">my:project</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># --- optional properties ---</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># defaults to project key</span></span><br><span class="line"><span class="comment">#sonar.projectName=My project</span></span><br><span class="line"><span class="comment"># defaults to &#x27;not provided&#x27;</span></span><br><span class="line"><span class="attr">sonar.projectVersion</span>=<span class="string">1.1</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"># Path is relative to the sonar-project.properties file. Defaults to .</span></span><br><span class="line"><span class="comment">#sonar.sources=.</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"># Encoding of the source code. Default is default system encoding</span></span><br><span class="line"><span class="comment">#sonar.sourceEncoding=UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sonar.login</span>=<span class="string">admin</span></span><br><span class="line"><span class="attr">sonar.password</span>=<span class="string">admin</span></span><br></pre></td></tr></table></figure><h3 id="重新分析代码后查看结果">重新分析代码后查看结果</h3><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202205031647535.png" alt="image-20220503164706457"></p><ul><li>查看错误详情</li></ul><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202205031648863.png" alt="image-20220503164800782"></p><h2 id="遇到的问题">遇到的问题</h2><h4 id="项目分析失败">项目分析失败</h4><ul><li><code>java.lang.IllegalStateException: Unrecoverable indexation failures: 1 errors among 1 requests</code></li></ul><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202205032110980.png" alt="image-20220503211051926"></p><ul><li>在<code>sonarqube-8.9.8.54436\logs\es.log</code>中输出显示磁盘占用过高，属于<code>elasticsearch</code>扫描磁盘时报的错</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WARN  es[][o.e.c.r.a.DiskThresholdMonitor] flood stage disk watermark [95%] exceeded on [q_uywwI7RkmOpRl5xaWlxA][sonarqube][D:\tool\sonarqube-8.9.8.54436\data\es7\nodes\0] free: 18.6gb[3.9%], all indices on this node will be marked read-only</span><br></pre></td></tr></table></figure><ul><li><p>解决方法——关闭磁盘空间阈值</p><ul><li><p>查看 <a href="http://localhost:9001/_cluster/settings?pretty">http://localhost:9001/_cluster/settings?pretty</a> 页面</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;persistent&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;transient&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>关闭 <code>StartSonar</code>，删除<code>sonarqube-8.9.8.54436\data\es7</code>下<code>nodes</code>文件夹（之前分析的项目会受影响）</p></li><li><p>重启 <code>StartSonar</code></p></li><li><p>使用<code>Postman</code>或其它方式，通过<code>put</code>请求修改<code>cluster.routing.allocation.disk.threshold_enabled</code>值为<code>false</code></p></li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202205032244223.png" alt="image-20220503224404156"></p>]]></content>
      
      
      <categories>
          
          <category> 软件测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试，工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/14/hello-world/"/>
      <url>/2022/03/14/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to my blog!</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=60% height=86 src="//music.163.com/outchain/player?type=2&id=1492276426&auto=0&height=66"></iframe>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>anaconda环境配置</title>
      <link href="/2021/10/12/anaconda%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2021/10/12/anaconda%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="anaconda-配置（安装-环境配置-换镜像源-虚拟环境与包操作）">anaconda 配置（安装-环境配置-换镜像源-虚拟环境与包操作）</h2><span id="more"></span><h2 id="前言">前言</h2><ul><li>一般安装<code>anaconda</code>后不需要再安装<code>python</code></li><li>目前最新版<code>anaconda</code>自带<code>python3.8</code>，包含<code>python</code> <code>3.5</code>-<code>3.8</code>和<code>2.7</code>版本</li><li>安装版本：<code>Anaconda3-2021.05-Windows-x86_64</code></li></ul><h2 id="下载-anaconda">下载 anaconda</h2><p>官方：<a href="https://www.anaconda.com/products/individual-d">https://www.anaconda.com/products/individual-d</a><br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445706.png" alt="1"><br>清华镜像：<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a><br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445707.png" alt="2"></p><h2 id="安装anaconda">安装<code>anaconda</code></h2><ul><li>打开安装包后，看图操作<br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445708.png" alt="3"><br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445709.png" alt="4"><br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445710.png" alt="5"><br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445711.png" alt="6"><br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445712.png" alt="7"><br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445713.png" alt="8"><br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445714.png" alt="9"><br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445715.png" alt="10"><br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445716.png" alt="11"></li><li>安装完成</li></ul><h2 id="配置环境变量">配置环境变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">安装路径\Anaconda3                          <span class="comment"># Python需要</span></span><br><span class="line">安装路径\Anaconda3\Scripts                  <span class="comment"># conda自带脚本</span></span><br><span class="line">安装路径\Anaconda3\Library\mingw-w64\bin    <span class="comment"># C with python</span></span><br><span class="line">安装路径\Anaconda3\Library\bin              <span class="comment"># jupyter notebook动态库</span></span><br></pre></td></tr></table></figure><h3 id="步骤">步骤</h3><ul><li>开始菜单右键选择系统进入设置<br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445717.png" alt="12"></li><li>选择高级系统设置<br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445718.png" alt="13"></li><li>选择环境变量，在系统变量中找到<code>Path</code>，双击打开<br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445719.png" alt="14"></li><li>通过新建增加环境变量<br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445720.png" alt="15"></li><li>点击确定保存配置</li></ul><h2 id="检查配置是否成功">检查配置是否成功</h2><ul><li><code>Win + R</code> ，输入<code>cmd</code>回车进入命令行<br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445721.png" alt="16"></li><li>输入以下三条命令出现版本号说明安装成功</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br><span class="line">conda --version</span><br><span class="line">jupyter --version</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445722.png" alt="17"></p><h2 id="配置anaconda">配置<code>anaconda</code></h2><h3 id="换国内镜像源（以清华镜像为例）">换国内镜像源（以清华镜像为例）</h3><ul><li><p>清华镜像源使用帮助：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/">https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/</a></p></li><li><p>修改用户目录下的 <code>.condarc</code> 文件(具体步骤)</p><ul><li><code>Win + R</code> ，输入<code>cmd</code>回车进入命令行（默认进入用户目录）</li><li>输入<code>.condarc</code>回车，若没有此文件，先执行 <code>conda config --set show_channel_urls yes</code> 生成该文件之后重试<br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445723.png" alt="18"></li><li>选择记事本打开，复制下面内容到文件中，保存即可</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line">  - defaults</span><br><span class="line">show_channel_urls: <span class="literal">true</span></span><br><span class="line">default_channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</span><br><span class="line">custom_channels:</span><br><span class="line">  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445724.png" alt="19"><br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445725.png" alt="20"></p></li><li><p>返回命令行，输入<code>conda info</code>查看是否成功<br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445726.png" alt="21"></p></li></ul><h3 id="虚拟环境与包操作（命令行下）">虚拟环境与包操作（命令行下）</h3><ul><li>常用对环境操作的命令，操作过程中可能会出现 <code>(y/n)</code> ，输入<code>y</code>回车即可</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">conda create --name mybase --<span class="built_in">clone</span> base       <span class="comment"># 克隆base环境到mybase</span></span><br><span class="line">conda create -n <span class="built_in">test</span> python=3.8               <span class="comment"># 创建名为test的虚拟环境，指定python版本为3.8（-n相当于--name）</span></span><br><span class="line"></span><br><span class="line">conda activate <span class="built_in">test</span>                           <span class="comment"># 切换至名为test的虚拟环境</span></span><br><span class="line">conda <span class="built_in">env</span> list                                <span class="comment"># 查看anaconda所有环境，*代表当前所在环境</span></span><br><span class="line"></span><br><span class="line">conda remove -n <span class="built_in">test</span> --all                    <span class="comment"># 删除名为test的虚拟环境</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 回滚（将环境恢复至某个时间）</span></span><br><span class="line">conda list --revisions        <span class="comment"># 查看历史，可通过日期后的rev值回滚</span></span><br><span class="line">conda install --revision 0    <span class="comment"># 回滚至创建时状态（创建时rev值一般为0）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装/更新包</span></span><br><span class="line">conda list                    <span class="comment"># 查看已安装的包</span></span><br><span class="line">conda install conda           <span class="comment"># 更新conda</span></span><br><span class="line">conda update --all            <span class="comment"># 更新所有包到最新版本</span></span><br><span class="line">conda install 包名            <span class="comment"># 安装指定包</span></span><br><span class="line">conda install 包名=版本号      <span class="comment"># 安装指定版本包</span></span><br><span class="line">conda update 包名             <span class="comment"># 更新指定包至最新版本</span></span><br><span class="line">conda remove 包名             <span class="comment"># 删除指定包</span></span><br><span class="line"><span class="comment"># pip和conda功能类似，在anaconda中优先使用conda</span></span><br><span class="line"><span class="comment"># upgrade是update的别名，无区别</span></span><br></pre></td></tr></table></figure><h3 id="Conda与Pip"><code>Conda</code>与<code>Pip</code></h3><ul><li><code>Conda</code>是一个与语言无关的跨平台包和环境管理器，只能在<code>conda</code>环境中安装包，但是可以安装各种语言、各种类型的包。</li><li><code>Pip</code>是<code>Python</code>包的通用管理器，是一个<code>Python</code>官方认证的包管理工具。<code>Pip</code>可以在任何环境中安装包，但是只能安装<code>Python</code>包。</li></ul><h3 id="upgrade与update"><code>upgrade</code>与<code>update</code></h3><ul><li>通过<code>conda help</code>可知，<code>upgrade</code>是<code>update</code>的别名<br><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261445727.png" alt="22"></li></ul><h2 id="END">END</h2>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境配置 </tag>
            
            <tag> anaconda </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GIT的学习小结</title>
      <link href="/2021/09/26/GIT%E7%9A%84%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%BB%93/"/>
      <url>/2021/09/26/GIT%E7%9A%84%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本地仓库的 GIT 基本操作,远程仓库的 GIT 操作以及一些实例</p><span id="more"></span><p>可视化练习网站推荐：<a href="https://learngitbranching.js.org/">https://learngitbranching.js.org/</a></p><h2 id="常用-GIT-命令">常用 GIT 命令</h2><h3 id="一-本地仓库的-GIT-基本操作">一. 本地仓库的 GIT 基本操作</h3><h4 id="git-commit"><code>git commit</code></h4><ul><li><p>创建 git 的提交记录</p></li><li><p>相当于将本地内容与 git 上内容（或者说当前版本与仓库中旧版本）对比，将二者差异打包作为一个提交记录</p></li></ul><h4 id="git-branch-分支名"><code>git branch [&quot;分支名&quot;]</code></h4><ul><li><p>创建 git 的分支</p></li><li><p>指向某个提交记录，基于这个提交记录以及它所有的父提交进行新的工作</p></li><li><p>按逻辑分解工作到不同分支中会使工作更加轻松，高效</p></li><li><p><code>git branch</code> （展示目前存在分支，和目前所在分支）</p></li></ul><h4 id="git-checkout-b-分支名-标识"><code>git checkout [-b] &lt;分支名&gt; [标识]</code></h4><ul><li><p>切换分支</p></li><li><p><code>git checkout -b &lt;分支名&gt;</code> （创建新分支并切换到新分支）</p></li><li><p><code>git checkout -b &lt;分支名&gt; &lt;标识&gt;</code> （在标识位置创建新分支并切换到新分支）</p></li></ul><h4 id="git-merge-分支名"><code>git merge &lt;分支名&gt;</code></h4><ul><li><p>合并两个分支</p></li><li><p>将指定分支合并到当前所在分支，将两个分支及其所有历史节点记录都包含进去，产生一个特殊的提交记录</p></li><li><p>为使两个被合并的分支记录统一，通常会切换到另一分支，再进行一次合并</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 例：新建 <span class="string">&quot;test&quot;</span> 分支，在 <span class="string">&quot;test&quot;</span>,<span class="string">&quot;main&quot;</span> 分支分别创建一个记录，并将两个分支合并，最终指向 <span class="string">&quot;main&quot;</span> 分支</span><br><span class="line">git branch <span class="built_in">test</span>      // 默认有 <span class="string">&quot;main&quot;</span> 分支， 创建一个 <span class="string">&quot;test&quot;</span> 分支并切换到 <span class="string">&quot;test&quot;</span> 分支</span><br><span class="line">git commit          // 在 <span class="string">&quot;main&quot;</span> 分支下创建一个提交记录</span><br><span class="line">git checkout <span class="built_in">test</span>    // 切换到 <span class="string">&quot;test&quot;</span> 分支</span><br><span class="line">git commit          // 在 <span class="string">&quot;test&quot;</span> 分支下创建一个提交记录</span><br><span class="line">git merge main       // 将 <span class="string">&quot;main&quot;</span> 分支合并到 <span class="string">&quot;test&quot;</span> 分支</span><br><span class="line">git checkout main    // 切换到 <span class="string">&quot;main&quot;</span> 分支</span><br><span class="line">git merge <span class="built_in">test</span>       // 将 <span class="string">&quot;test&quot;</span> 分支合并到 <span class="string">&quot;main&quot;</span> 分支</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="git-rebase-目标分支-分支名"><code>git rebase [目标分支] &lt;分支名&gt;</code></h4><ul><li>取出<strong>目标分支</strong>（默认当前分支）提交记录，移动至<strong>分支名</strong>分支，原地留下一个副本分支</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 例：新建 <span class="string">&quot;test&quot;</span> 分支，将其移至 <span class="string">&quot;main&quot;</span> 分支，并更新 <span class="string">&quot;main&quot;</span> 分支，最终指向 <span class="string">&quot;main&quot;</span> 分支</span><br><span class="line">git branch <span class="built_in">test</span>    // 默认有 <span class="string">&quot;main&quot;</span> 分支， 创建一个 <span class="string">&quot;test&quot;</span> 分支</span><br><span class="line">git commit         // 在 <span class="string">&quot;main&quot;</span> 分支下创建一个提交记录</span><br><span class="line">git checkout <span class="built_in">test</span>  // 切换到 <span class="string">&quot;test&quot;</span> 分支</span><br><span class="line">git commit         // 在 <span class="string">&quot;test&quot;</span> 分支下创建一个提交记录</span><br><span class="line">git rebase main    // 将 <span class="string">&quot;test&quot;</span> 分支移动到 <span class="string">&quot;main&quot;</span> 分支</span><br><span class="line">git checkout main  // 切换到 <span class="string">&quot;main&quot;</span> 分支</span><br><span class="line">git rebase <span class="built_in">test</span>    // 更新 <span class="string">&quot;main&quot;</span> 分支（将 <span class="string">&quot;main&quot;</span> 分支移动到 <span class="string">&quot;test&quot;</span> 分支）</span><br></pre></td></tr></table></figure><h3 id="二-远程仓库的-GIT-操作">二. 远程仓库的 GIT 操作</h3><h4 id="git-clone"><code>git clone</code></h4><ul><li><p>拷贝远程仓库的所有内容</p></li><li><p><code>git clone</code> 后会产生一个远程分支 <code>&lt; remote name &gt; / &lt; branch name &gt;</code> (例（默认分支）：<code>origin/master</code>)</p></li><li><p>远程分支反映了 “远程仓库相应分支，在你上次和它通信时的<strong>状态</strong>”</p></li><li><p>远程分支在检出时（即处于远程分支上时）自动进入分离 HEAD 状态</p><ul><li>这样是为了使我们无法直接在 “远程分支” 上进行操作, 我们必须在别的地方完成工作, 再用远程推送工作成果</li><li>Git 变成了分离 HEAD 状态，当添加新的提交时 “远程分支” 也不会更新</li><li>“远程分支” 只有在远程仓库中相应的分支更新了以后才会更新</li></ul></li></ul><h4 id="git-fetch"><code>git fetch</code></h4><ul><li><p>从远程仓库获取数据</p></li><li><p><strong>所有远程分支</strong>将会更新以反映最新的远程仓库，即单独从远程仓库下载本地仓库中缺失的提交记录</p></li><li><p>本地分支不会更新，即本地仓库状态不会改变 (更新<code>origin/master</code>分支，不更新<code>master</code>分支)</p></li><li><p><code>git fetch</code> 通常通过互联网（使用 <code>http://</code> 或 <code>git://</code> 协议) 与远程仓库通信。</p></li></ul><p><strong>当远程分支中有新的提交时，可以像合并本地分支那样来合并远程分支</strong></p><h4 id="git-cherry-pick-分支名"><code>git cherry-pick &lt;分支名&gt;</code></h4><ul><li>拷贝 “分支名” 的单个节点到 “当前所在节点” 下</li></ul><p><code>git rebase &lt;分支名&gt;</code>（前）</p><ul><li>取出 “当前所在分支” 的一系列提交记录，移到 “分支名” 分支，原地留下一个副本分支</li></ul><p><code>git merge &lt;分支名&gt;</code>（前）</p><ul><li>将 “分支名” 分支合并到 “当前所在分支” ， “当前所在分支下” 产生一个新的提交记录</li></ul><h4 id="git-pull"><code>git pull</code></h4><ul><li><p>先抓取更新，再合并到本地分支</p></li><li><p><code>git pull</code> 会抓取<strong>当前分支</strong>对应的远程仓库的更新，并合并更新至到<strong>本地分支</strong></p></li><li><p>类似<code>git fetch</code>（<code>git fetch</code>会更新所有分支，<code>git pull</code>只会更新当前分支） 加<code>git merge &lt;远程分支&gt;</code></p><ul><li>例：<code>git fetch</code>加<code>git merge origin/master</code>，此后，<strong>当前分支</strong>为<code>master</code></li></ul></li></ul><h4 id="git-pull-rebase"><code>git pull --rebase</code></h4><ul><li><p>先抓取更新，再移动当前分支至更新的远程分支</p></li><li><p><code>git pull --rebase</code> 会抓取<strong>当前分支</strong>对应的远程仓库的更新，并取出<strong>当前分支</strong>提交记录，移动至<strong>更新的远程分支</strong>，原地留下一个副本分支</p></li><li><p>类似<code>git fetch</code>（<code>git fetch</code>会更新所有分支，<code>git pull</code>只会更新当前分支） 加<code>git rebase &lt;远程分支&gt;</code></p><ul><li>例：<code>git fetch</code>加<code>git rebase origin/master</code>，此后，<strong>当前分支</strong>为<code>master</code></li></ul></li></ul><h4 id="git-push"><code>git push</code></h4><ul><li><p>提交本地更新</p></li><li><p><code>git push</code> 会将<strong>当前分支变更</strong>上传到指定的远程仓库，并在远程仓库上合并你的新提交记录</p></li><li><p>将会更新<strong>当前分支对应的远程分支</strong></p></li><li><p><code>git push</code> 不带任何参数时的行为与 Git 的一个名为 <code>push.default</code> 的配置有关。它的默认值取决于使用的 Git 的版本</p></li><li><p>在项目中进行推送之前，最好检查一下<code>push.default</code> 的配置</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. git push -f origin master //本地强行覆盖远端,慎用</span><br><span class="line"></span><br><span class="line">2. git push -u origin master //将本地的master分支推送到origin主机，同时指定origin为默认主机</span><br><span class="line"></span><br><span class="line">3. git push                  //在 2 后用表示推送默认分支到默认主机</span><br></pre></td></tr></table></figure><h4 id="示例">示例</h4><h5 id="远程仓库和本地仓库都有新的变更">远程仓库和本地仓库都有新的变更</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fetch --rebase // 远程拉取最新记录，将本地最新记录合并至新分支(git fetch + git rebase &lt;分支名&gt;)</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h5 id="远程服务器拒绝直接推送-push-提交到-main">远程服务器拒绝直接推送(push)提交到 main</h5><ul><li>main 被锁定了, 需要一些 Pull Request 流程来合并修改。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 新建一个分支feature, 推送到远程服务器</span><br><span class="line">// 然后reset你的main分支和远程服务器保持一致——否则下次你pull并且他人的提交和你冲突的时候就会有问题.</span><br><span class="line"></span><br><span class="line">// 方法1：先看当前位置标识C2</span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line">git reset o/main</span><br><span class="line">git checkout -b feature C2</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h5 id="本地初始化仓库与远程仓库合并">本地初始化仓库与远程仓库合并</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin &lt;远程仓库地址&gt;     <span class="comment"># 与远程仓库建立连接，默认origin</span></span><br><span class="line">git fetch</span><br><span class="line">git branch --set-upstream-to=origin/main main <span class="comment"># 设置上游地址（将远程分支origin/main设为本地分支main的上游）</span></span><br><span class="line">git rebase</span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输错远程分支名，需要删除远程分支步骤</span></span><br><span class="line">git branch -a     <span class="comment"># 查看所有分支</span></span><br><span class="line">git push origin -d master   <span class="comment"># 删除远程分支</span></span><br><span class="line"><span class="comment"># git pull 出错，返回</span></span><br><span class="line">git remote remove &lt;远程分支名&gt; <span class="comment"># 取消与远程分支的联系，默认名为origin</span></span><br></pre></td></tr></table></figure><h2 id="本地管理仓库">本地管理仓库</h2><ul><li>安装<a href="https://git-scm.com/">GIT</a></li><li>常用命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">// 初始化</span><br><span class="line">git init                  // 在文件夹下初始化git</span><br><span class="line">git <span class="built_in">clone</span> &lt;仓库地址&gt;         // 克隆仓库</span><br><span class="line">git branch &lt;分支名&gt;         // 创建新分支</span><br><span class="line"></span><br><span class="line">// 配置用户</span><br><span class="line">git config --global user.email “you@example.com”  // 设置用户邮箱</span><br><span class="line">git config --global user.name “Your Name”         // 设置用户名</span><br><span class="line"></span><br><span class="line">// 配置相关：</span><br><span class="line">1、仓库级别 <span class="built_in">local</span> 【优先级最高】</span><br><span class="line">2、用户级别 global【优先级次之】</span><br><span class="line">3、系统级别 system【优先级最低】</span><br><span class="line">git config --<span class="built_in">local</span> -l       // 查看（仓库/用户/系统）配置</span><br><span class="line">git config --global -l</span><br><span class="line">git config --system -l</span><br><span class="line"></span><br><span class="line">git config -e               // 编辑配置文件</span><br><span class="line">git config --<span class="built_in">local</span> -e       // 编辑仓库级别配置文件</span><br><span class="line">git config --global -e   // 编辑用户级别配置文件</span><br><span class="line">git config --system -e   // 编辑系统级别配置文件</span><br><span class="line"></span><br><span class="line">//分支操作</span><br><span class="line">git branch       // 查看git分支</span><br><span class="line">git checkout &lt;分支名&gt;        // 移动到分支</span><br><span class="line">git checkout -b &lt;分支名&gt;     // 创建新分支并移动到此分支</span><br><span class="line">git branch -d &lt;分支名&gt;    // 删除分支</span><br><span class="line"></span><br><span class="line">// 记录操作</span><br><span class="line">git add &lt;文件路径&gt;            // 增加变动到暂存区，例：`.`表示将根目录下所有改动加入暂存区</span><br><span class="line">git commit -m &lt;msg&gt;       // 提交记录修改 -m &lt;msg&gt; 表示提交说明</span><br><span class="line">git <span class="built_in">log</span>       // 查看提交记录</span><br><span class="line">git reflog       // 查看修改记录</span><br><span class="line"></span><br><span class="line">// 回滚操作</span><br><span class="line">git reset [--hard] &lt;标识&gt;    // 标识可以是 git <span class="built_in">log</span> 或 git reflog 中的标识码 例：4e5be9d</span><br><span class="line">                            // [--hard]：重置索引和工作树。此后对工作树中跟踪文件的任何更改&lt;commit&gt;都将被丢弃（隐藏）。</span><br><span class="line">// 本地常用</span><br><span class="line">git merge &lt;分支名&gt;        // 将分支合并到当前分支</span><br><span class="line">git rebase &lt;分支名&gt;       // 取出当前分支提交记录，移动至此分支，原地留下一个此分支的副本</span><br></pre></td></tr></table></figure><h1>END</h1>]]></content>
      
      
      <categories>
          
          <category> 计算机工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>够用的 GIT 操作</title>
      <link href="/2021/09/26/%E5%A4%9F%E7%94%A8%E7%9A%84git%E6%93%8D%E4%BD%9C/"/>
      <url>/2021/09/26/%E5%A4%9F%E7%94%A8%E7%9A%84git%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="阶段一——使用项目">阶段一——使用项目</h3><ul><li>克隆仓库到本地：<code>git clone &lt;仓库地址&gt;</code><ul><li><code>git clone https://gitee.com/solmp/test.git</code></li></ul></li><li>README<ul><li>是项目的说明文档，采用 markdown 格式</li><li>用来说明项目如何运行，如何使用</li></ul></li><li>Issues<ul><li>用来解决对仓库项目的问题</li><li>如果是新遇到的还没人提的问题，可以通过 markdown 语法提出问题，此时问题状态为 Open</li><li>仓库管理员解决后，问题状态变为 Close</li></ul></li><li>LICENSE<ul><li>仓库证书，当需要以此项目为基础或者使用此项目的部分代码进行开发，需要遵守此证书上的协议</li></ul></li><li>Star<ul><li>收藏此项目仓库</li><li>Star 树可以作为项目热度和质量的参考</li></ul></li></ul><h3 id="阶段二——创建并管理个人仓库（本地）">阶段二——创建并管理个人仓库（本地）</h3><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202203261443276.png" alt="image-20220220002526651"></p><ul><li><p>在本地文件夹中初始化仓库：<code>git init</code></p></li><li><p>第一次使用 git 时需要设置邮箱和用户名</p><ul><li><p><code>git config --global user.name &quot;用户名&quot;</code></p></li><li><p><code>git config --global user.email &quot;用户邮箱&quot;</code></p></li><li><pre><code class="language-bash">git config --global user.name &quot;John Doe&quot;git config --global user.email johndoe@example.com</code></pre></li><li><p><code>--global </code> 表示所有仓库默认使用此信息，若是需要特别指定，可以去掉，表示只应用在当前仓库</p></li><li><p>查看当前配置：<code>git config --list</code></p></li></ul></li><li><p>将文件增加到暂存区：<code>git add &lt;文件名&gt;</code></p><ul><li>暂存所有已更改的文件：<code>git add -A</code> 或 <code>git add .</code></li></ul></li><li><p>提交暂存区中的文件到仓库中：<code>git commit -m &quot;提交信息&quot;</code></p></li><li><p>查看提交日志：<code>git log --stat</code></p></li><li><p>查看目前未提交的改动文件的状态：<code>git status -s</code></p></li><li><p>撤回未增加到暂存区的更改：<code>git checkout &lt;文件名&gt;</code></p></li><li><p>取消前一次提交到暂存区：<code>git reset --soft HEAD^</code></p></li><li><p>取消前一次提交到工作区：<code>git reset HEAD^1</code> 或 <code>git reset HEAD^</code></p></li></ul><h3 id="阶段三——参与多人项目开发（分支）">阶段三——参与多人项目开发（分支）</h3><ul><li><p>创建分支：<code>git branch &lt;分支名&gt;</code></p><ul><li>创建并切换分支：<code>git checkout -b &lt;分支名&gt;</code></li><li>切换分支：<code>git checkout &lt;分支名&gt;</code></li><li>查看所有分支（*号表示当前分支）：<code>git branch</code></li><li>删除分支：<code>git branch --delete &lt;分支名&gt;</code> 或 <code>git branch -d &lt;分支名&gt;</code></li></ul></li><li><p>合并分支（待合并分支 -&gt; main）</p><ul><li><p>需要切换到 main 分支后合并：<code>git merge &lt;待合并分支&gt;</code></p></li><li><p>产生冲突：</p><p><img src="https://cdn.jsdelivr.net/gh/solmp/imgurl/202202221541442.png" alt="image-20220222154148379"></p><ul><li>冲突部分保留原先内容后提交</li><li>冲突部分保留待合并分支内容后提交</li><li>冲突部分保留两部分内容，自行修改后提交</li><li>放弃当前合并操作（无法处理冲突）：<code>git merge --abort</code></li><li>合并完成后可以删除 &lt;待合并分支&gt;，从 main 分支重新拉取，也可以将 main 分支合并到 &lt;待合并分支&gt;</li></ul></li></ul></li></ul><h3 id="阶段四——远端仓库">阶段四——远端仓库</h3><ul><li><p>本地仓库和远程仓库建立连接</p><ul><li><p>建立连接：<code>git remote add origin &lt;远程仓库地址&gt; </code></p><ul><li>例：<code>git remote add origin https://gitee.com/solmp/newtest.git</code></li></ul></li><li><p>将本地的 master 分支推送到 origin 主机，同时指定 origin 为默认主机：<code>git push -u origin &quot;master&quot;</code></p><ul><li>非主分支需要这种方式在远端创建相应分支与本地分支对应</li><li>首次推送需要登陆认证</li><li>更改远程仓库地址：<code>git remote set-url origin &lt;更改后的地址&gt;</code></li><li>查看当前对应的远程仓库：<code>git remote -v</code></li></ul></li></ul></li><li><p>常用操作</p><ul><li>推送<strong>当前分支</strong>到默认主机：<code>git push</code></li><li>获取远端仓库更新合并到本地：<code>git pull</code></li><li>创建本地不存在的远端仓库分支：<code>git checkout -b &lt;分支名&gt; origin/&lt;分支名&gt;</code></li><li>冲突处理方法与在本地仓库处理冲突方式相同</li></ul></li></ul><h3 id="其它">其它</h3><h4 id="找开源项目的一些途径">找开源项目的一些途径</h4><ul><li><p><a href="https://github.com/trending/">https://github.com/trending/</a></p></li><li><p><a href="https://github.com/521xueweihan/HelloGitHub">https://github.com/521xueweihan/HelloGitHub</a></p></li><li><p><a href="https://github.com/ruanyf/weekly">https://github.com/ruanyf/weekly</a></p></li><li><p><a href="https://www.zhihu.com/column/mm-fe">https://www.zhihu.com/column/mm-fe</a></p></li><li><p><a href="https://github.com/explore">https://github.com/explore</a></p></li><li><p><a href="https://changelog.com/weekly/archive">https://changelog.com/weekly/archive</a></p></li></ul><h4 id="特殊的查找资源小技巧-常用前缀后缀">特殊的查找资源小技巧-常用前缀后缀</h4><ul><li>找百科大全 awesome xxx</li><li>找例子 xxx sample</li><li>找空项目架子 xxx starter / xxx boilerplate</li><li>找教程  xxx tutorial</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> git </tag>
            
            <tag> 加精 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
